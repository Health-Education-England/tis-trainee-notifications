server:
  port: 8211
  servlet:
    context-path: /notifications

application:
  cache:
    key-prefix: Notifications
    time-to-live: PT24H
  cognito:
    user-pool-id: ${COGNITO_USER_POOL_ID}
  domain: ${APP_DOMAIN:}
  email:
    sender: ${EMAIL_SENDER}
  environment: ${ENVIRONMENT:local}
  queues:
      coj-received: ${COJ_RECEIVED_QUEUE}
      credential-revoked: ${CREDENTIAL_REVOKED_QUEUE:http://localhost:4566/queue/tis-trainee-credentials-local-update-programme-membership}
      form-updated: ${FORM_UPDATED_QUEUE}
      programme-membership: ${PROGRAMME_MEMBERSHIP_UPDATED_QUEUE}
  template-versions:
    coj-confirmation:
      email: v1.0.0
    credential-revoked:
      email: v1.0.0
    form-updated:
      email: v1.0.0
  timezone: Europe/London

com:
  amazonaws:
    xray:
      emitters:
        daemon-address: ${AWS_XRAY_DAEMON_ADDRESS:}

sentry:
  dsn: ${SENTRY_DSN:}
  environment: application.environment

spring:
  cloud:
    aws:
      endpoint: ${AWS_ENDPOINT:}
  data:
    mongodb:
      uri: mongodb://${MONGO_USER:admin}:${MONGO_PASSWORD:pwd}@${MONGO_HOST:localhost}:${MONGO_PORT:27017}/${MONGO_DB:notifications}?authSource=admin
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      ssl:
        enabled: ${REDIS_SSL:false}
      username: ${REDIS_USERNAME:default}
      password: ${REDIS_PASSWORD:password}
  datasource:
    driver: com.mysql.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:test}?useUnicode=true&characterEncoding=utf8&useSSL=${MYSQL_SSL:false}
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:}
  flyway:
    baseline-version: 1 # version to start migration
    baseline-on-migrate: true
    check-location: false # Check that migration scripts location exists.
    clean-on-validation-error: false
    ignore-future-migrations: true
    init-sqls: # SQL statements to execute to initialize a connection immediately after obtaining it.
    locations: classpath:db/migration
    out-of-order: true
    password: ${spring.datasource.password}
    schemas: ${MYSQL_DB:test}
    sql-migration-prefix: V
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    enabled: true
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    jobStore:
      useProperties: true
