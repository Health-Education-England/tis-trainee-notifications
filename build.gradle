plugins {
  id "java"
  id "org.springframework.boot" version "3.1.5"
  id "io.spring.dependency-management" version "1.1.3"

  // Code quality plugins
  id "checkstyle"
  id "jacoco"
  id "org.sonarqube" version "4.4.1.3373"
}

group = "uk.nhs.tis.trainee"
version = "1.5.2"

configurations {
  checkstyleConfig

  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.4"
    mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:3.0.3"
  }
}

dependencies {
  // Spring Boot starters
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
  implementation "org.springframework.boot:spring-boot-starter-data-redis"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation "org.springframework.boot:spring-boot-starter-mail"
  implementation "org.springframework.boot:spring-boot-starter-quartz"
  implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
  implementation "org.springframework.boot:spring-boot-starter-web"
  testImplementation "org.springframework.boot:spring-boot-starter-test"

  implementation "io.awspring.cloud:spring-cloud-aws-starter-ses"
  implementation "io.awspring.cloud:spring-cloud-aws-starter-sqs"
  implementation "software.amazon.awssdk:cognitoidentityprovider"
  implementation "com.amazonaws:aws-xray-recorder-sdk-spring:2.14.0"

  implementation "com.mysql:mysql-connector-j"
  implementation "org.flywaydb:flyway-core"
  implementation "org.flywaydb:flyway-mysql"

  // Lombok
  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"

  // MapStruct
  ext.mapstructVersion = "1.5.5.Final"
  implementation "org.mapstruct:mapstruct:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

  // Sentry reporting
  ext.sentryVersion = "6.32.0"
  implementation "io.sentry:sentry-spring-boot-starter:${sentryVersion}"
  implementation "io.sentry:sentry-logback:${sentryVersion}"

  testImplementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
  ext.playtikaTestcontainersVersion = "3.0.5"
  testImplementation "com.playtika.testcontainers:embedded-mongodb:$playtikaTestcontainersVersion"
  testImplementation "com.playtika.testcontainers:embedded-mysql:$playtikaTestcontainersVersion"
  testImplementation "com.playtika.testcontainers:embedded-redis:$playtikaTestcontainersVersion"
  testImplementation "com.h2database:h2"
  testImplementation "org.testcontainers:junit-jupiter:1.19.2"

  testImplementation "org.jsoup:jsoup:1.16.2"

  checkstyleConfig("com.puppycrawl.tools:checkstyle:${checkstyle.toolVersion}") {
    transitive = false
  }
}

checkstyle {
  config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, "google_checks.xml")
}

jacocoTestReport {
  reports {
    html.required = true
    xml.required = true
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTIUM
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", System.getenv("SONAR_TOKEN")
    property "sonar.organization", "health-education-england"
    property "sonar.projectKey", "Health-Education-England_tis-trainee-notifications"

    property "sonar.java.checkstyle.reportPaths",
      "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"
  }
}

test {
  finalizedBy jacocoTestReport
  useJUnitPlatform()
}
